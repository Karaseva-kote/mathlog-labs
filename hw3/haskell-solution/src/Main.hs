module Main where

import Grammar
import Axioms
import Data.List (intercalate)

main :: IO ()
main = do
  input <- getLine
  let num = read input::Int
  let problem = Problem (Quantifiers Exist "x" (Equal (intToTerm num) (Mul (Inc (Inc Zero)) (Var "x"))))
  putStrLn (intercalate "\n" [show problem, show DocAxiom, start, generateDoc num Zero Zero ++ endDoc (show (intToTerm num)) (show (intToTerm (num `div` 2)))])

endDoc y x = 
  let res = ["(@a.(@b.((a=b)->(b=a))))->(@b.((0''*" ++ x ++ "=b)->(b=0''*" ++ x ++ ")))",
             "(@b.((0''*" ++ x ++ "=b)->(b=0''*" ++ x ++ ")))",
             "(@b.((0''*" ++ x ++ "=b)->(b=0''*" ++ x ++ ")))->((0''*" ++ x ++ "=" ++ y ++ ")->(" ++ y ++ "=0''*" ++ x ++ "))",
             "((0''*" ++ x ++ "=" ++ y ++ ")->(" ++ y ++ "=0''*" ++ x ++ "))",
             "(" ++ y ++ "=0''*" ++ x ++ ")",
             "(" ++ y ++ "=0''*" ++ x ++ ")->?x." ++ y ++ "=0''*x",
             "?x." ++ y ++ "=0''*x"]
  in intercalate "\n" res

intToTerm :: Int -> Term 
intToTerm 0 = Zero
intToTerm i = Inc (intToTerm (i - 1))

start :: String
start = intercalate "\n" ["(@a.(a*0=0))->(0''*0=0)", "(0''*0=0)"]

generateDoc :: Int -> Term -> Term -> String
generateDoc 0 x n = ""
generateDoc i a b =
  let 
    x = show a
    y = show b
    result = ["(@a.(a+0=a))->(0''*" ++ x ++ "+0=0''*" ++ x  ++ ")",
              "(0''*" ++ x ++ "+0=0''*" ++ x ++ ")",
              "(@a.(@b.((a=b)->(b=a))))->(@b.((0''*"++ x ++ "+0=b)->(b=0''*" ++ x ++ "+0)))",
              "(@b.((0''*" ++ x ++ "+0=b)->(b=0''*" ++ x ++ "+0)))",
              "(@b.((0''*" ++ x ++ "+0=b)->(b=0''*" ++ x ++ "+0)))->((0''*" ++ x ++ "+0=0''*" ++ x ++")->(0''*" ++ x ++ "=0''*" ++ x ++ "+0))",
              "((0''*" ++ x ++ "+0=0''*" ++ x ++ ")->(0''*" ++ x ++ "=0''*" ++ x ++ "+0))",
              "(0''*" ++ x ++ "=0''*" ++ x ++ "+0)",
              "(@a.@b.@c.(a=b->a=c->b=c))->(@b.@c.(0''*" ++ x ++ "=b->0''*" ++ x ++ "=c->b=c))",
              "(@b.@c.(0''*" ++ x ++ "=b->0''*" ++ x ++ "=c->b=c))",
              "(@b.@c.(0''*" ++ x ++ "=b->0''*" ++ x ++ "=c->b=c))->(@c.(0''*" ++ x ++ "=0''*" ++ x ++ "+0->0''*" ++ x ++ "=c->0''*" ++ x ++ "+0=c))",
              "(@c.(0''*" ++ x ++ "=0''*" ++ x ++ "+0->0''*" ++ x ++ "=c->0''*" ++ x ++ "+0=c))",
              "(@c.(0''*" ++ x ++ "=0''*" ++ x ++ "+0->0''*" ++ x ++ "=c->0''*" ++ x ++ "+0=c))->(0''*" ++ x ++ "=0''*" ++ x ++ "+0->0''*" ++ x ++ "=" ++ y ++ "->0''*" ++ x ++ "+0=" ++ y ++ ")",
              "(0''*" ++ x ++ "=0''*" ++ x ++ "+0->0''*" ++ x ++ "=" ++ y ++ "->0''*" ++ x ++ "+0=" ++ y ++ ")",
              "(0''*" ++ x ++ "=" ++ y ++ "->0''*" ++ x ++"+0=" ++ y ++ ")",
              "(0''*" ++ x ++ "+0=" ++ y ++ ")",
              "(@a.(@b.(a=b->a'=b')))->(@b.((0''*" ++ x ++ "+0=b->(0''*" ++ x ++ "+0)'=b')))",
              "(@b.((0''*" ++ x ++ "+0=b->(0''*" ++ x ++ "+0)'=b')))",
              "(@b.((0''*" ++ x ++ "+0=b->(0''*" ++ x ++ "+0)'=b')))->(0''*" ++ x ++ "+0=" ++ y ++ "->(0''*" ++ x ++ "+0)'=" ++ y ++ "')",
              "(0''*" ++ x ++ "+0=" ++ y ++ "->(0''*" ++ x ++ "+0)'=" ++ y ++ "')",
              "((0''*" ++ x ++ "+0)'=" ++ y ++"')",
              "(@a.(@b.(a+b'=(a+b)')))->(@b.(0''*" ++ x ++ "+b'=(0''*" ++ x ++ "+b)'))",
              "(@b.(0''*" ++ x ++ "+b'=(0''*" ++ x ++ "+b)'))",
              "(@b.(0''*" ++ x ++ "+b'=(0''*" ++ x ++ "+b)'))->(0''*" ++ x ++ "+0'=(0''*" ++ x ++ "+0)')",
              "(0''*" ++ x ++ "+0'=(0''*" ++ x ++ "+0)')",
              "(@a.(@b.((a=b)->(b=a))))->(@b.((0''*" ++ x ++ "+0'=b)->(b=0''*" ++ x ++ "+0')))",
              "(@b.((0''*" ++ x ++ "+0'=b)->(b=0''*" ++ x ++ "+0')))",
              "(@b.((0''*" ++ x ++ "+0'=b)->(b=0''*" ++ x ++ "+0')))->((0''*" ++ x ++ "+0'=(0''*" ++ x ++ "+0)')->((0''*" ++ x ++ "+0)'=0''*" ++ x ++ "+0'))",
              "(0''*" ++ x ++ "+0'=(0''*" ++ x ++ "+0)')->((0''*" ++ x ++ "+0)'=0''*" ++ x ++ "+0')",
              "((0''*" ++ x ++ "+0)'=0''*" ++ x ++ "+0')",
              "(@a.@b.@c.(a=b->a=c->b=c))->(@b.@c.((0''*" ++ x ++ "+0)'=b->(0''*" ++ x ++ "+0)'=c->b=c))",
              "(@b.@c.((0''*" ++ x ++ "+0)'=b->(0''*" ++ x ++ "+0)'=c->b=c))",
              "(@b.@c.((0''*" ++ x ++ "+0)'=b->(0''*" ++ x ++ "+0)'=c->b=c))->(@c.((0''*" ++ x ++ "+0)'=0''*" ++ x ++ "+0'->(0''*" ++ x ++ "+0)'=c->0''*" ++ x ++ "+0'=c))",
              "(@c.((0''*" ++ x ++ "+0)'=0''*" ++ x ++ "+0'->(0''*" ++ x ++ "+0)'=c->0''*" ++ x ++ "+0'=c))",
              "(@c.((0''*" ++ x ++ "+0)'=0''*" ++ x ++ "+0'->(0''*" ++ x ++ "+0)'=c->0''*" ++ x ++ "+0'=c))->((0''*" ++ x ++ "+0)'=0''*" ++ x ++ "+0'->(0''*" ++ x ++ "+0)'=" ++ y ++ "'->0''*" ++ x ++ "+0'=" ++ y ++ "')",
              "((0''*" ++ x ++ "+0)'=0''*" ++ x ++ "+0'->(0''*" ++ x ++ "+0)'=" ++ y ++ "'->0''*" ++ x ++ "+0'=" ++ y ++ "')",
              "((0''*" ++ x ++ "+0)'=" ++ y ++ "'->0''*" ++ x ++ "+0'=" ++ y ++ "')",
              "(0''*" ++ x ++ "+0'=" ++ y ++ "')",
              "(@a.(@b.(a=b->a'=b')))->(@b.(0''*" ++ x ++ "+0'=b->(0''*" ++ x ++ "+0')'=b'))",
              "(@b.(0''*" ++ x ++ "+0'=b->(0''*" ++ x ++ "+0')'=b'))",
              "(@b.(0''*" ++ x ++ "+0'=b->(0''*" ++ x ++ "+0')'=b'))->(0''*" ++ x ++ "+0'=" ++ y ++ "'->(0''*" ++ x ++ "+0')'=" ++ y ++ "'')",
              "(0''*" ++ x ++ "+0'=" ++ y ++ "'->(0''*" ++ x ++ "+0')'=" ++ y ++ "'')",
              "((0''*" ++ x ++ "+0')'=" ++ y ++ "'')",
              "(@a.(@b.(a+b'=(a+b)')))->(@b.(0''*" ++ x ++ "+b'=(0''*" ++ x ++ "+b)'))",
              "(@b.(0''*" ++ x ++ "+b'=(0''*" ++ x ++ "+b)'))",
              "(@b.(0''*" ++ x ++ "+b'=(0''*" ++ x ++ "+b)'))->(0''*" ++ x ++ "+0''=(0''*" ++ x ++ "+0')')",
              "(0''*" ++ x ++ "+0''=(0''*" ++ x ++ "+0')')",
              "(@a.(@b.((a=b)->(b=a))))->(@b.((0''*" ++ x ++ "+0''=b)->(b=0''*" ++ x ++ "+0'')))",
              "(@b.((0''*" ++ x ++ "+0''=b)->(b=0''*" ++ x ++ "+0'')))",
              "(@b.((0''*" ++ x ++ "+0''=b)->(b=0''*" ++ x ++ "+0'')))->((0''*" ++ x ++ "+0''=(0''*" ++ x ++ "+0')')->((0''*" ++ x ++ "+0')'=0''*" ++ x ++ "+0''))",
              "((0''*" ++ x ++ "+0''=(0''*" ++ x ++ "+0')')->((0''*" ++ x ++ "+0')'=0''*" ++ x ++ "+0''))",
              "((0''*" ++ x ++ "+0')'=0''*" ++ x ++ "+0'')",
              "(@a.@b.@c.(a=b->a=c->b=c))->(@b.@c.((0''*" ++ x ++ "+0')'=b->(0''*" ++ x ++ "+0')'=c->b=c))",
              "(@b.@c.((0''*" ++ x ++ "+0')'=b->(0''*" ++ x ++ "+0')'=c->b=c))",
              "(@b.@c.((0''*" ++ x ++ "+0')'=b->(0''*" ++ x ++ "+0')'=c->b=c))->(@c.((0''*" ++ x ++ "+0')'=0''*" ++ x ++ "+0''->(0''*" ++ x ++ "+0')'=c->0''*" ++ x ++ "+0''=c))",
              "(@c.((0''*" ++ x ++ "+0')'=0''*" ++ x ++ "+0''->(0''*" ++ x ++ "+0')'=c->0''*" ++ x ++ "+0''=c))",
              "(@c.((0''*" ++ x ++ "+0')'=0''*" ++ x ++ "+0''->(0''*" ++ x ++ "+0')'=c->0''*" ++ x ++ "+0''=c))->((0''*" ++ x ++ "+0')'=0''*" ++ x ++ "+0''->(0''*" ++ x ++ "+0')'=" ++ y ++ "''->0''*" ++ x ++ "+0''=" ++ y ++ "'')",
              "((0''*" ++ x ++ "+0')'=0''*" ++ x ++ "+0''->(0''*" ++ x ++ "+0')'=" ++ y ++ "''->0''*" ++ x ++ "+0''=" ++ y ++ "'')",
              "((0''*" ++ x ++ "+0')'=" ++ y ++ "''->0''*" ++ x ++ "+0''=" ++ y ++ "'')",
              "(0''*" ++ x ++ "+0''=" ++ y ++ "'')",
              "(@a.(@b.(a*b'=a*b+a)))->(@b.(0''*b'=0''*b+0''))",
              "(@b.(0''*b'=0''*b+0''))",
              "(@b.(0''*b'=0''*b+0''))->(0''*" ++ x ++ "'=0''*" ++ x ++ "+0'')",
              "(0''*" ++ x ++ "'=0''*" ++ x ++ "+0'')",
              "(@a.(@b.((a=b)->(b=a))))->(@b.((0''*" ++ x ++ "'=b)->(b=0''*" ++ x ++ "')))",
              "(@b.((0''*" ++ x ++ "'=b)->(b=0''*" ++ x ++ "')))",
              "(@b.((0''*" ++ x ++ "'=b)->(b=0''*" ++ x ++ "')))->((0''*" ++ x ++ "'=0''*" ++ x ++ "+0'')->(0''*" ++ x ++ "+0''=0''*" ++ x ++ "'))",
              "((0''*" ++ x ++ "'=0''*" ++ x ++ "+0'')->(0''*" ++ x ++ "+0''=0''*" ++ x ++ "'))",
              "(0''*" ++ x ++ "+0''=0''*" ++ x ++ "')",
              "(@a.@b.@c.(a=b->a=c->b=c))->(@b.@c.(0''*" ++ x ++ "+0''=b->0''*" ++ x ++ "+0''=c->b=c))",
              "(@b.@c.(0''*" ++ x ++ "+0''=b->0''*" ++ x ++ "+0''=c->b=c))",
              "(@b.@c.(0''*" ++ x ++ "+0''=b->0''*" ++ x ++ "+0''=c->b=c))->(@c.(0''*" ++ x ++ "+0''=0''*" ++ x ++ "'->0''*" ++ x ++ "+0''=c->0''*" ++ x ++ "'=c))",
              "(@c.(0''*" ++ x ++ "+0''=0''*" ++ x ++ "'->0''*" ++ x ++ "+0''=c->0''*" ++ x ++ "'=c))",
              "(@c.(0''*" ++ x ++ "+0''=0''*" ++ x ++ "'->0''*" ++ x ++ "+0''=c->0''*" ++ x ++ "'=c))->(0''*" ++ x ++ "+0''=0''*" ++ x ++ "'->0''*" ++ x ++ "+0''=" ++ y ++ "''->0''*" ++ x ++ "'=" ++ y ++ "'')",
              "(0''*" ++ x ++ "+0''=0''*" ++ x ++ "'->0''*" ++ x ++ "+0''=" ++ y ++ "''->0''*" ++ x ++ "'=" ++ y ++ "'')",
              "(0''*" ++ x ++ "+0''=" ++ y ++ "''->0''*" ++ x ++ "'=" ++ y ++ "'')",
              "(0''*" ++ x ++ "'=" ++ y ++ "'')",
              generateDoc (i - 2) (Inc a) (Inc (Inc b))]
  in intercalate "\n" result